(()=>{"use strict";var t={d:(e,o)=>{for(var s in o)t.o(o,s)&&!t.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:o[s]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};function e(t,e,o,s){const n=function(t,e,o){const s=Array(),n=t=>t.isValidCellCoor()&&!e[t.y][t.x],l=Array(4);l.fill(!1);for(let e=0;e<4;e++){const o=e*Math.PI/2,r=new f(Math.cos(o),Math.sin(o)).map((t=>Math.round(t))),a=t.plus(r);n(a)&&(s.push(a),l[e]=!0)}if(o){const e=(t,e)=>t+1==e?0:t+1;for(let o=0;o<4;o++){const r=o*Math.PI/2+Math.PI/4,a=new f(Math.cos(r),Math.sin(r)).map((t=>Math.round(t))),i=t.plus(a),c=l[o]||l[e(o,4)];n(i)&&c&&s.push(i)}}return s}(t,o.typeMask(p.Obstacle),s);return n.filter((t=>!e.has(o.coorToN(t))))}function o(t,e,o,s){let n=null,l=1/0;return e.forEach((e=>{const r=t.get(e),a=function(t,e,o){const s=Math.abs(t.x-e.x),n=Math.abs(t.y-e.y),l=s+n;return o?l-Math.min(s,n):l}(e,o,s)+r.distance;a<l&&(l=a,n=e)})),n}t.d({},{lT:()=>p,FM:()=>f});const s=document.getElementById("myCanvas"),n=s.getContext("2d"),l=document.getElementById("belowCanvas"),r=document.getElementById("toggleButton"),a=document.getElementById("toggleInfo"),i=document.getElementById("clearButton"),c=document.getElementById("diagonalCheckbox"),h=document.getElementById("pathInfo"),d=10,u=10,y=30;var p;!function(t){t[t.Nothing=0]="Nothing",t[t.Obstacle=1]="Obstacle",t[t.Endpoint=2]="Endpoint",t[t.Path=3]="Path"}(p||(p={}));class f{constructor(t,e){this.x=t,this.y=e}plus(t){return new f(this.x+t.x,this.y+t.y)}map(t){return new f(t(this.x),t(this.y))}isValidCellCoor(){return this.x>=0&&this.x<30&&this.y>=0&&this.y<20}isEqual(t){return this.x==t.x&&this.y==t.y}}class g{constructor(t,e,o){this.type=t,this.distance=e,this.parent=o}}class m{constructor(t,e){this.cols=t,this.rows=e,this.data=Array(this.rows);for(let t=0;t<this.rows;t++){this.data[t]=Array(this.cols);for(let e=0;e<this.cols;e++)this.data[t][e]=new g(p.Nothing,1/0,null)}n.fillStyle="white",n.fillRect(0,0,1e3,1e3),n.beginPath();for(let t=u;t<=this.cols*y+u;t+=y)n.moveTo(t,u),n.lineTo(t,e*y+u);for(let t=u;t<=e*y+u;t+=y)n.moveTo(u,t),n.lineTo(this.cols*y+u,t);n.stroke()}get(t){return this.data[t.y][t.x]}set(t,e){this.get(t).type=e;const o=t.x*y+u+1,s=t.y*y+u+1;n.fillStyle=C.get(e),n.fillRect(o,s,28,28)}coorToN(t){return t.y*this.cols+t.x}NToCoor(t){const e=Math.floor(t/this.cols),o=t-e*this.cols;return new f(o,e)}mousePosToCellCoor(t){return t.map((t=>Math.floor((t-u-d)/y)))}countCell(t){return this.data.flat().filter((e=>e.type==t)).length}clickCell(t){const e=this.get(t).type;if(e==p.Nothing){const e=this.countCell(p.Endpoint);(e<2||w.cellType==p.Obstacle)&&(this.set(t,w.cellType),w.cellType==p.Endpoint&&1==e&&this.drawPath())}else e==p.Endpoint?(this.clearPath(),this.typeCoorArray(p.Endpoint).forEach((t=>this.set(t,p.Nothing)))):e==p.Obstacle&&(this.set(t,p.Nothing),2==this.countCell(p.Endpoint)&&(this.clearPath(),this.drawPath()))}drawPath(){console.log("drawing path"),function(t,s){const[[n,l],r]=function(t,s){for(let e=0;e<t.rows;e++)for(let o=0;o<t.cols;o++)t.data[e][o].distance=1/0,t.data[e][o].parent=null;const n=t.typeCoorArray(p.Endpoint),l=n[0],r=n[1];t.get(l).distance=0;let a=t.coorToN(l);const i=t.coorToN(r),c=new Set([a]),h=new Set;for(;a!=i;){const l=t.NToCoor(a),i=e(l,h,t,s),d=t.get(l).distance+1;i.forEach((e=>{const o=t.get(e);c.add(t.coorToN(e)),d<o.distance&&(o.distance=d,o.parent=l)})),c.delete(a),h.add(a);const u=o(t,Array.from(c).map((e=>t.NToCoor(e))),r,s);if(!u)return[n,!1];a=t.coorToN(u)}return[n,!0]}(t,s);let a=l;for(;a;)console.log(a),a.isEqual(n)||a.isEqual(l)||t.set(a,p.Path),a=t.get(a).parent;return r}(this,c.checked)?h.textContent="":h.textContent="No path"}clearPath(){console.log("clearing path"),this.typeCoorArray(p.Path).forEach((t=>this.set(t,p.Nothing)))}typeCoorArray(t){const e=Array();for(let o=0;o<this.cols;o++)for(let s=0;s<this.rows;s++)this.data[s][o].type==t&&e.push(new f(o,s));return e}typeMask(t){const e=Array(this.rows);for(let o=0;o<this.rows;o++){e[o]=Array(this.cols);for(let s=0;s<this.cols;s++)this.data[o][s].type==t?e[o][s]=!0:e[o][s]=!1}return e}}const C=new Map;C.set(p.Nothing,"white"),C.set(p.Obstacle,"black"),C.set(p.Endpoint,"red"),C.set(p.Path,"yellow");const w={cellType:p.Obstacle,lastCell:new f(-1,-1),isMousePressed:!1};let E=new m(30,20);function x(t,e){const o=new f(t.x,t.y),s=E.mousePosToCellCoor(o);!s.isValidCellCoor()||e&&s.isEqual(w.lastCell)||(w.lastCell=s,E.clickCell(s))}s.style.top=`${d}px`,s.style.left=`${d}px`,l.style.top=`${d+E.rows*y+20}px`,l.style.left=`${d+u}px`,i.addEventListener("click",(()=>{E=new m(30,20)})),document.addEventListener("mousedown",(t=>{w.isMousePressed=!0,x(t,!1)})),document.addEventListener("mouseup",(()=>{w.isMousePressed=!1})),document.addEventListener("mousemove",(t=>{w.isMousePressed&&x(t,!0)})),r.addEventListener("click",(()=>{w.cellType==p.Obstacle?(w.cellType=p.Endpoint,a.textContent="Endpoints"):(w.cellType=p.Obstacle,a.textContent="Obstacles")}))})();
//# sourceMappingURL=bundled.js.map